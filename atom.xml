<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>实验基地</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-12-06T12:17:24.959Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>暮寒溪</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java</title>
    <link href="http://example.com/2024/12/06/2024-12-06-Java/"/>
    <id>http://example.com/2024/12/06/2024-12-06-Java/</id>
    <published>2024-12-05T16:00:00.000Z</published>
    <updated>2024-12-06T12:17:24.959Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>jdk也称Java jdk，可以理解为Java的库也就是c语言中的头文件吧可能</p><p>sdk则是Java用用于开发软件所存在的一个概念，可以理解为开发工具</p><p>Java是一门具有面向对象的编程语言，Java性能强支持多线程运行</p><p>Java对大小写敏感，Java的类名开头字母需要大写，如果类名存在多个单词则需要每个单词首字母大写，而方法名则是开头需要小写，但是如果存在多个单词则和类名不一样，后面的需要大写，并且源文件名必须与方法名相同保存并加入Java后缀，否则会编译出错</p><p>java标识符必须以字母或者下划线以及$开头，并且对大小敏感，关键字不能作为标识符</p><p>Java修饰符分为访问控制和非访问控制符</p><p>Java变量分为局部变量和静态变量以及非静态变量</p><p>Java在5.0引入了枚举概念</p><p>Java注释与c语言和c++类似，但是加入了文档注释（文档注释以 &#x2F;** 开始，以 *&#x2F; 结束，通常出现在类、方法、字段等的声明前面，用于生成代码文档，这种注释可以被工具提取并生成 API 文档，如 JavaDoc。）</p><p>java继承有超类与子类俩个概念，被继承者称为超类，继承者则称为子类与派生类</p><p>Java接口则在继承中起作用，主要为为派生类定义需要用到的方法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h2&gt;&lt;p&gt;jdk也称Java jdk，可以理解为Java的库也就是c语言中的头文件吧可能&lt;/p&gt;
&lt;p&gt;sdk则是Java用用于开发软件所存在的一个概</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>命名空间</title>
    <link href="http://example.com/2024/12/04/2024-12-04-%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/"/>
    <id>http://example.com/2024/12/04/2024-12-04-%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</id>
    <published>2024-12-03T16:00:00.000Z</published>
    <updated>2024-12-05T01:06:33.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>命名空间主要是为了解决同一作用域中定义重复的元素而导致代码混乱，命名空间通过全局作用域分割独立空间来解决以上问题</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>#include&lt;stdio.h&gt;<br>int rand &#x3D; 10;<br>int main()<br>{<br>    printf(“%d\n”,rand);<br>    return 0;<br>}</p><p>此时正常，当时如果在头文件中加入rand函数所在的头文件就会出现计算机运行程序时找到了两个rand函数，而出现错误</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>定义命名空间时使用namespace，后面接定义空间的名称并且接{}，然后再{}中接空间成员</p><p>命名空间可以嵌套，类似C语言中的循环嵌套，但是命名空间只能在全局范围内定义</p><p>使用命名空间内成语有三种方法</p><p>第一：使用作用域限定符<a><a href="https://blog.csdn.net/2302_78391795/article/details/142230911">【C++指南】作用域限定符 :: 使用详解_c++ 限定作用域-CSDN博客</a></a></p><p>第二：将命名空间全部展开（cpp using namespace xxx）</p><p>此方法有风险，三思而后行</p><p>第三：将命名空间部分展开（ using XXX :: xxx;）<br>可以在不全部展开的情况下不使用作用域限定符！！！</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>这个概念适用于c++与c#，其他语言部分可用但是不推荐</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;命名空间主要是为了解决同一作用域中定义重复的元素而导致代码混乱，命名空间通过全局作用域分割独立空间来解决以上问题&lt;/p&gt;
&lt;h2 id=&quot;实</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>html</title>
    <link href="http://example.com/2024/12/02/html/"/>
    <id>http://example.com/2024/12/02/html/</id>
    <published>2024-12-01T16:00:00.000Z</published>
    <updated>2024-12-02T06:44:24.741Z</updated>
    
    <content type="html"><![CDATA[<h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><!DOCTYPE html><p>这句活就是告诉我们使用那个html版本。<br>只需要记住，看到上面这行代码，说明使用的是html5的版本。</p><meta charset = "UTF-8">utf-8是目前最常用的字符集编码方式，其他的还有gb2312(简单中文)，BIG5(繁体中文)，GBK(全部中文字符)，UTF-8(全世界所有国家需要用到的字符！)。这里只需要记录UTF-8。<h1>~<h6>大小依次递减，注意没有<7>啥的，只有这六个！<hr>用与分隔内容<p>属性</p><hr width="400">1.属性采用的是“键值对”的形式，key = "value" 格式(每个键对应着相应的值， 当按下相应的键时， 就会输出相应的结果)2.属性不分先后顺序！3.任何属性都有默认值，忽略该属性则取默认值。4.属性包括在引号里面，无论是单引号还是双引号都可以，但是如果属性本身带有双引号则必须使用单引号<p>class:为html元素定义一个或多个类名（classname）(类名从样式文件引入)<br>id:定义元素的唯一id（id 属性可用于创建一个 HTML 文档书签）<br>style:规定元素的行内样式（inline style）<br>title:描述了元素的额外信息 (作为工具条使用)</p><p>HTML在浏览器当中显示时，会将多余的空白或者空格变为一个空格（即使是<br>换行也是如此</p><p>href和src的区别<br>              href用于 指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的联系<br>              src会将其指向的资源下载并应用到文档中，比如 JavaScript 脚本，img 图片</p><p>HTML链接属性（使用<a>和</a>标签链接）<br>1、href：定义链接目标</p><p>2、target：定义链接的打开方式<br> blank: 在新窗口或新标签页中打开链接。<br>_self: 在当前窗口或标签页中打开链接（默认）。<br>_parent: 在父框架中打开链接。<br>_top: 在整个窗口中打开链接，取消任何框架。3、rel：定义链接与目标页面的关系</p><p>4、download：提示浏览器下载链接目标而不是导航到该目标</p><p>5、title：定义链接的额外信息，当鼠标悬停在链接上时显示的工具提示</p><p>6、id：用于链接锚点，通常在同一页面中跳转到某个特定位置</p><p>7、hreflang: 指定链接的目标URL的语言</p><p>8、type: 指定链接资源的MIME类型</p><p>9、class: 用于指定元素的类名（CSS中定义）</p><p>10、style: 直接在元素上定义CSS样式</p><p>HTML 链接 -taget属性可以定义被链接的文档在何处显示</p><p>HTML元素</p><head> 元素包含了所有的头部标签元素<title> 元素:定义了浏览器工具栏的标题当网页添加到收藏夹时，显示在收藏夹中的标题显示在搜索引擎结果页面的标题<base> 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接:]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;html&quot;&gt;&lt;a href=&quot;#html&quot; class=&quot;headerlink&quot; title=&quot;html&quot;&gt;&lt;/a&gt;html&lt;/h2&gt;&lt;!DOCTYPE html&gt;
&lt;p&gt;这句活就是告诉我们使用那个html版本。&lt;br&gt;只需要记住，看到上面这行代码，说明使用的是h</summary>
      
    
    
    
    
  </entry>
  
</feed>
